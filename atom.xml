<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无证程序员的PT桑</title>
  
  <subtitle>删库跑路中 ╮(╯▽╰)╭</subtitle>
  <link href="https://boypt.github.io/atom.xml" rel="self"/>
  
  <link href="https://boypt.github.io/"/>
  <updated>2021-09-07T05:09:57.177Z</updated>
  <id>https://boypt.github.io/</id>
  
  <author>
    <name>PTさん</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日本 au home spot cube 水晶盒子Wifi路由</title>
    <link href="https://boypt.github.io/2021/09/07/auhome-spot-cube/"/>
    <id>https://boypt.github.io/2021/09/07/auhome-spot-cube/</id>
    <published>2021-09-07T02:34:27.000Z</published>
    <updated>2021-09-07T05:09:57.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="日本-au-home-spot-cube-水晶盒子Wifi路由"><a href="#日本-au-home-spot-cube-水晶盒子Wifi路由" class="headerlink" title="日本 au home spot cube 水晶盒子Wifi路由"></a>日本 au home spot cube 水晶盒子Wifi路由</h1><h2 id="原厂固件5G加入中国频段方法"><a href="#原厂固件5G加入中国频段方法" class="headerlink" title="原厂固件5G加入中国频段方法"></a>原厂固件5G加入中国频段方法</h2><ul><li>用户名<code>root</code></li><li>密码<code>plumeria0077</code></li></ul><p>打开<code>192.168.0.1/syscmd.asp</code></p><p>输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flash sethw HW_WLAN1_REG_DOMAIN 2</span><br><span class="line">flash sethw HW_WLAN0_REG_DOMAIN 2</span><br></pre></td></tr></table></figure><p>重启后进入设置，打开SSID3设置页面(确保5G必须打开)，接着进入<code>192.168.0.1/wlbasic.asp</code>选频段，默认是自动，可以设置149和153两个国内信道。<br>再次重启就可以了。</p><p><a href="http://www.right.com.cn/forum/thread-164531-1-1.html">原文地址</a></p><h2 id="1、关闭WPS"><a href="#1、关闭WPS" class="headerlink" title="1、关闭WPS"></a>1、关闭WPS</h2><p>2.4Ghz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash set WLAN0_WSC_DISABLE 1</span><br></pre></td></tr></table></figure><p>5Ghz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash set WLAN1_WSC_DISABLE 1</span><br></pre></td></tr></table></figure><p>害怕被PIN可以看一下这些文字：<br>If the wrong PIN code three times, You will not be able to connect more. Please press the button below to release it.<br>UnLock<br>我也曾mdk3攻击路由器，使它重启，但是攻击5分钟无效。</p><p>==== 2、使用中国5Ghz频道 ====</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash set WLAN0_CHANNEL 149</span><br></pre></td></tr></table></figure><p>==== 3、更改时区为东八区 ====</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash set NTP_TIMEZONE -8\ 1</span><br></pre></td></tr></table></figure><p>==== 4、更改LAN IP地址 ====</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flash set IP_ADDR 192.168.0.1</span><br><span class="line">flash set SUBNET_MASK 255.255.255.0</span><br><span class="line">flash set DHCP_CLIENT_START 192.168.0.100</span><br><span class="line">flash set DHCP_CLIENT_END 192.168.0.200</span><br></pre></td></tr></table></figure><p>==== 5、更改用户名密码 ====</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flash set SUPER_NAME root</span><br><span class="line">flash set SUPER_PASSWORD plumeria0077</span><br><span class="line">flash set USER_NAME au</span><br><span class="line">flash set USER_PASSWORD 1234</span><br></pre></td></tr></table></figure><p>==== 6、修改PIN码 ( 此项修改之后是初始化无法复原的 ) ====</p><p>2.4Ghz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash sethw HW_WLAN0_WSC_PIN xxxxxxxx</span><br></pre></td></tr></table></figure><p>5Ghz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash sethw HW_WLAN1_WSC_PIN xxxxxxxx</span><br></pre></td></tr></table></figure><p>===== sdk固件要刷回原版，可以参考【N500R_TTL+TFTP写入教程】， =====</p><p>注意：</p><ol><li>加电时RESET， 然后192.168.1.6 就可以了，电脑地址要设为192.168.1.x。</li><li>tftp上传的原版固件威编程器固件，大小是8M的。8192kB3. </li></ol><p>刷机命令</p><p><code>FLW 0 80500000 800000</code></p><p>注意一定是大写的。<br>4. 启动后，登陆时账号是root，密码plumeria0077，你们的可以试试哈。</p><ol start="5"><li>关于5G 149信道设置：虽然设置为149，但在【本机状态】5G信道是36，解决方法：</li></ol><p>打开【系统维护】【系统命令行】或者192.168.0.1/syscmd.asp<br>输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flash sethw HW_WLAN1_REG_DOMAIN 2</span><br><span class="line">flash sethw HW_WLAN0_REG_DOMAIN 2</span><br></pre></td></tr></table></figure><p>重启后进入设置，打开SSID3设置页面(确保5G必须打开)，接着进入【无线设置】或192.168.0.1/wlbasic.asp选频段，默认是自动，<br>可以设置149和153两个国内信道。新版的信道可以输入。<br>再次重启就可以了。<br>可以在【本机状态】查看5G是否是149信道。</p><h1 id="恢复Ccalibration-Power"><a href="#恢复Ccalibration-Power" class="headerlink" title="恢复Ccalibration Power"></a>恢复Ccalibration Power</h1><p>赶紧查了一下，找到了[Embedded System] 手動設定 Ccalibration Power 搞定。</p><p>怎么样修改Ccalibration Power呢，举个栗子，说一下。<br>1、</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HW_WLAN0_TX_POWER_CCK_A=3333333131313131313131313131</span><br></pre></td></tr></table></figure><p>33是16进制转换10进制为51，31转换为49。</p><p>命令是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash set HW_WLAN0_TX_POWER_CCK_A 51 51 51 49 49 49 49 49 49 49 49 49 49 49</span><br></pre></td></tr></table></figure><p>2、复杂一点的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HW_WLAN0_TX_POWER_5G_HT40_1S_A=00000000000000000000000000000000000000000000000000000000000000000000002f2f2f2f2f2f2f2f2f2f2d2d2d2d2d2d2d2d2d2d2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2c2c2c2c2c2c2d2d2d2d2d2d000000000000000000000000000000000000000000000000000000000000</span><br></pre></td></tr></table></figure><p>你自己转换分组的，我累了。（末尾的00舍弃）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash sethw HW_WLAN0_TX_POWER_5G_HT40_1S_B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 47 47 47 47 47 47 47 47 47 47 45 45 45 45 45 45 45 45 45 45 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 44 44 44 44 44 44 45 45 45 45 45 45</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;日本-au-home-spot-cube-水晶盒子Wifi路由&quot;&gt;&lt;a href=&quot;#日本-au-home-spot-cube-水晶盒子Wifi路由&quot; class=&quot;headerlink&quot; title=&quot;日本 au home spot cube 水晶盒子Wifi路</summary>
      
    
    
    
    <category term="Networking" scheme="https://boypt.github.io/categories/Networking/"/>
    
    
    <category term="wifi" scheme="https://boypt.github.io/tags/wifi/"/>
    
    <category term="router" scheme="https://boypt.github.io/tags/router/"/>
    
    <category term="‎PXH11RWA" scheme="https://boypt.github.io/tags/%E2%80%8EPXH11RWA/"/>
    
  </entry>
  
  <entry>
    <title>移动光猫烽火HG6821M</title>
    <link href="https://boypt.github.io/2021/09/07/HG6821M/"/>
    <id>https://boypt.github.io/2021/09/07/HG6821M/</id>
    <published>2021-09-07T02:30:37.000Z</published>
    <updated>2021-09-07T05:09:57.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动光猫烽火HG6821M"><a href="#移动光猫烽火HG6821M" class="headerlink" title="移动光猫烽火HG6821M"></a>移动光猫烽火HG6821M</h1><h2 id="超级用户"><a href="#超级用户" class="headerlink" title="超级用户"></a>超级用户</h2><ul><li>用户名：<code>CMCCAdmin</code></li><li>密码：<code>aDm8H%MdA</code></li></ul><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><ul><li>用户名：<code>fiberhomehg2x0</code></li><li>密码：<code>hg2x0</code></li></ul><h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><ul><li>用户名：<code>root</code></li><li>密码：<code>hg2x0</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;移动光猫烽火HG6821M&quot;&gt;&lt;a href=&quot;#移动光猫烽火HG6821M&quot; class=&quot;headerlink&quot; title=&quot;移动光猫烽火HG6821M&quot;&gt;&lt;/a&gt;移动光猫烽火HG6821M&lt;/h1&gt;&lt;h2 id=&quot;超级用户&quot;&gt;&lt;a href=&quot;#超级用户&quot;</summary>
      
    
    
    
    <category term="Networking" scheme="https://boypt.github.io/categories/Networking/"/>
    
    
    <category term="modem" scheme="https://boypt.github.io/tags/modem/"/>
    
    <category term="光猫" scheme="https://boypt.github.io/tags/%E5%85%89%E7%8C%AB/"/>
    
    <category term="HG6821M" scheme="https://boypt.github.io/tags/HG6821M/"/>
    
  </entry>
  
  <entry>
    <title>在路由器iptables中匹配IPv6动态地址</title>
    <link href="https://boypt.github.io/2018/10/24/match-ipv6/"/>
    <id>https://boypt.github.io/2018/10/24/match-ipv6/</id>
    <published>2018-10-24T07:59:18.000Z</published>
    <updated>2021-09-07T05:09:57.177Z</updated>
    
    <content type="html"><![CDATA[<p>家用宽带目前很多都部署了IPv6，家用路由器目前Padavan/Openwrt等系统都能较好地支持了IPv6。不过要充分利用IPv6链接设备，有些坑。</p><h3 id="动态变化的IPv6地址"><a href="#动态变化的IPv6地址" class="headerlink" title="动态变化的IPv6地址"></a>动态变化的IPv6地址</h3><p>首先是IPv6地址，不同设备（操作系统）获取的IPv6地址有区别，较为通用的是【无状态EUI-64地址】，操作系统通过网卡的mac地址生成一个64位固定后缀，以及路由器下发的64位前缀，合成一个固定的IPv6地址。</p><p>作为服务端，【无状态EUI-64地址】是较为适合的，Linux发行版很多组件（systemd-netword，dhcpcd等）默认都采用EUI-64地址。 </p><p>另外还有通过DHCPv6下发的地址，可以通过设置静态分发，对应设备（DUID）下发特定地址。作为服务器地址最适合的方式。</p><p>此外，家用宽带ISP提供的IPv6前缀是不定期变化的。可见要访问家庭宽带内网的设备，光是地址就存在了蛮多的变化因素。</p><h3 id="IPv6的【隐私扩展地址】"><a href="#IPv6的【隐私扩展地址】" class="headerlink" title="IPv6的【隐私扩展地址】"></a>IPv6的【隐私扩展地址】</h3><p>终端设备，比如手机、工作站版本Windows等设备，则使用【隐私扩展】的方式随机生成64位后缀，这样终端的地址每次链接时候都会随机改变，访问外部资源时候可避免被追踪。 如果要连接Windows远程桌面，安装的是工作站版本，系统默认已经启用【隐私扩展】，主机地址就是随机变化的，想要连接3389就很麻烦了，不过这个特性可以关闭。服务器版本的Windows默认不启用隐私扩展，而家庭版Windows不支持远程桌面[doge]。 管理员权限的CMD下执行 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netsh interface ipv6 set global randomizeidentifiers=disabled store=active </span><br><span class="line">netsh interface ipv6 set global randomizeidentifiers=disabled store=persistent </span><br><span class="line">netsh interface ipv6 set privacy state=disabled store=active </span><br><span class="line">netsh interface ipv6 set privacy state=disabled store=persistent</span><br></pre></td></tr></table></figure><h3 id="IPv6防火墙ip6tables"><a href="#IPv6防火墙ip6tables" class="headerlink" title="IPv6防火墙ip6tables"></a>IPv6防火墙ip6tables</h3><p>要从外网通过IPv6访问家里路由器下的设备，最关键一点是路由器上的防火墙要允许这样的转发。 Padavan/Openwrt都是基于Linux - ip6tables的防火墙。</p><p>默认情况下，只允许了v6子网内的设备被ping，只允许特定类型的ICMPv6报文通过转发，其他通信报文一律丢弃了。所以虽然IPv6下每个设备都有公网地址，但是还不至于不安全到每个设备都可让人随便连。</p><h3 id="动态匹配EUI-64后缀"><a href="#动态匹配EUI-64后缀" class="headerlink" title="动态匹配EUI-64后缀"></a>动态匹配EUI-64后缀</h3><p>考虑到前缀变化因素，要访问特定设备，就是让IPTABLES匹配特定设备的EUI-64后缀放通这个地址： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip6tables -I FORWARD -d ::abcd:1234:5678:90ef/::ffff:ffff:ffff:ffff -j ACCEPT</span><br></pre></td></tr></table></figure><p>可见iptables对v6地址的匹配<strong>掩码</strong>可以非常灵活，不像v4下只按前缀适配。坑的就是这个特征是没有文档的，目前文档中写的mask解释还是适配IPv4的内容，<a href="http://blog.dupondje.be/?p=17">有人专门发邮件去netfilter列表问了才知道</a>。IPv6地址中，双冒号::的写法代表是前/后均为0位，双冒号只能出现一次。</p><h3 id="动态匹配DHCPv6固定后缀"><a href="#动态匹配DHCPv6固定后缀" class="headerlink" title="动态匹配DHCPv6固定后缀"></a>动态匹配DHCPv6固定后缀</h3><p>对于内网服务器，可以设置DHCPv6进行固定网段后缀分配，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">240e:1234:5678:1234::1024:101</span><br><span class="line">240e:1234:5678:1234::1024:102</span><br><span class="line">240e:1234:5678:1234::1024:103</span><br><span class="line">240e:1234:5678:1234::1024:104</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>在路由器上可以一个命令匹配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip6tables -I FORWARD -d ::1024:0000/::ffff:0000 -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="Openwrt中配置转发规则"><a href="#Openwrt中配置转发规则" class="headerlink" title="Openwrt中配置转发规则"></a>Openwrt中配置转发规则</h3><p><img src="/2018/10/24/match-ipv6/openwrt-ip6tables.png"></p><h3 id="Padavan中设置转发规则"><a href="#Padavan中设置转发规则" class="headerlink" title="Padavan中设置转发规则"></a>Padavan中设置转发规则</h3><p>其实padavan中的防火墙功能并没有配置地址匹配转发规则的功能界面，只能在自定义脚本中写原始的iptables命令。截图中使用的padavan是增加了QOS组件的老毛子版本。   </p><p><img src="/2018/10/24/match-ipv6/padavan-ip6tables.png" alt="padavan-ip6tables"><br>以上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;家用宽带目前很多都部署了IPv6，家用路由器目前Padavan/Openwrt等系统都能较好地支持了IPv6。不过要充分利用IPv6链接设备，有些坑。&lt;/p&gt;
&lt;h3 id=&quot;动态变化的IPv6地址&quot;&gt;&lt;a href=&quot;#动态变化的IPv6地址&quot; class=&quot;header</summary>
      
    
    
    
    <category term="Networking" scheme="https://boypt.github.io/categories/Networking/"/>
    
    
    <category term="iptables" scheme="https://boypt.github.io/tags/iptables/"/>
    
    <category term="address" scheme="https://boypt.github.io/tags/address/"/>
    
    <category term="ipv6" scheme="https://boypt.github.io/tags/ipv6/"/>
    
    <category term="suffix" scheme="https://boypt.github.io/tags/suffix/"/>
    
  </entry>
  
  <entry>
    <title>iptables笔记</title>
    <link href="https://boypt.github.io/2018/09/07/iptables/"/>
    <id>https://boypt.github.io/2018/09/07/iptables/</id>
    <published>2018-09-07T02:39:44.000Z</published>
    <updated>2021-09-07T05:09:57.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Packet-Flow-Chart"><a href="#Packet-Flow-Chart" class="headerlink" title="Packet Flow Chart"></a>Packet Flow Chart</h1><p><img src="/2018/09/07/iptables/packet_flow10.png"></p><h1 id="Netfilter-Flow-Chart"><a href="#Netfilter-Flow-Chart" class="headerlink" title="Netfilter Flow Chart"></a>Netfilter Flow Chart</h1><p><img src="/2018/09/07/iptables/Netfilter-packet-flow.svg.png"></p><h1 id="Firewall-Rules"><a href="#Firewall-Rules" class="headerlink" title="Firewall Rules"></a>Firewall Rules</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install iptables-persistent</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NAT-as-port-forwarding"><a href="#NAT-as-port-forwarding" class="headerlink" title="NAT as port forwarding"></a>NAT as port forwarding</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 数据包进入PREROUTING Chain，DNAT修改来源数据包的目的地址/端口为映射的$DEST_IP:$PORT</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dst $WAN_IP --dport 80 -j DNAT --to-destination $DEST_IP:$PORT</span><br><span class="line"></span><br><span class="line"># 此时Packet的目的地址不是本机地址，而是$DEST_IP，进入filter表的FORWARD Chain进行规则审核，要允许其通过（若filter表已是默认允许的，可以忽略本条）</span><br><span class="line">iptables -A FORWARD -p tcp --dst $DEST_IP --dport $PORT -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 进入POSTROUTING Chain，SNAT修改数据包中的来源地址为本网关；若目的机的默认网关就是本机，可以忽略本步（因为如果是目的机的默认网关，不管发往哪里的包都是发回来本网关；不然的话会发去了另外一个网关，无法成为相同一个NAT会话，无法通信）。默认网关的方式不用这句时目标机可以看到来源的真实地址。</span><br><span class="line">iptables -t nat -A POSTROUTING -p tcp --dst $DEST_IP --dport 80 -j SNAT --to-source $LAN_IP</span><br><span class="line"></span><br><span class="line"># 在网关本机和内网其他机器访问WAN_IP这个端口映射，数据包产生在OUTPUT Chain，需要做和PREROUTING相同的操作才能访问到（若不需要，可忽略本步）</span><br><span class="line">iptables -t nat -A POSTROUTING --dst $WAN_IP -p tcp --dport 80 -j DNAT --to-destination $DEST_IP:$PORT</span><br></pre></td></tr></table></figure><h1 id="NAT-as-gateway"><a href="#NAT-as-gateway" class="headerlink" title="NAT as gateway"></a>NAT as gateway</h1><p>Enable IP Forwarding</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/.*net\.ipv4\.ip_forward.*/net.ipv4.ip_forward = 1/&#x27; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>MASQUERADE, pppoe等动态IP环境使用环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 10.0.0.0/8 -j MASQUERADE</span><br></pre></td></tr></table></figure><p>or</p><p>SNAT, 静态外网IP, 或出口网卡绑定了多个IP时候使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 10.0.0.0/8 -j SNAT --to-source &lt;IP&gt;</span><br></pre></td></tr></table></figure><p>自动调整经pppoe-wan接口发出的TCP数据MSS, PPP链路情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t mangle -I POSTROUTING -o pppoe-wan -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</span><br></pre></td></tr></table></figure><h1 id="NAT-as-proxy-（双向NAT，举例推特API服务器hosts转发）"><a href="#NAT-as-proxy-（双向NAT，举例推特API服务器hosts转发）" class="headerlink" title="NAT as proxy （双向NAT，举例推特API服务器hosts转发）"></a>NAT as proxy （双向NAT，举例推特API服务器hosts转发）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d [YOUR SERVER IP] -p tcp -m tcp --dport 443 -j DNAT --to-destination 199.59.148.20:443 </span><br><span class="line">iptables -t nat -A POSTROUTING -d 199.59.148.20 -p tcp -m tcp --dport 443 -j SNAT --to-source [YOUR SERVER IP]</span><br><span class="line"></span><br><span class="line">iptables -A FORWARD -d 199.59.148.20 -p tcp -m tcp --dport 443 -j ACCEPT </span><br><span class="line">iptables -A FORWARD -s 199.59.148.20 -p tcp -m tcp --sport 443 -m state --state RELATED,ESTABLISHED -j ACCEPT </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Iptables-Firewall-后-FTP-服务-List-命令超时"><a href="#Iptables-Firewall-后-FTP-服务-List-命令超时" class="headerlink" title="Iptables Firewall 后 FTP 服务 List 命令超时"></a>Iptables Firewall 后 FTP 服务 List 命令超时</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">modprobe ip_conntrack_ftp</span><br><span class="line">echo &quot;ip_conntrack_ftp&quot; &gt;&gt;/etc/modules</span><br></pre></td></tr></table></figure><h1 id="Filter-DNS-from-GFW"><a href="#Filter-DNS-from-GFW" class="headerlink" title="Filter DNS from GFW"></a>Filter DNS from GFW</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT --source 8.8.8.8,8.8.4.4 -p udp --source-port 53 -m dscp ! --dscp 0x00 -j DROP</span><br><span class="line">iptables -A INPUT --source 8.8.8.8,8.8.4.4 -p udp --source-port 53 -m ttl --ttl-gt 48 -j DROP </span><br></pre></td></tr></table></figure><h1 id="Quick-fix-for-deprecated-state-module-since-Dec-2012"><a href="#Quick-fix-for-deprecated-state-module-since-Dec-2012" class="headerlink" title="Quick fix for deprecated state module [since Dec 2012]"></a>Quick fix for deprecated state module [since Dec 2012]</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/-m state --state/-m conntrack --ctstate/g&quot; /etc/iptables/iptables.rules</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Packet-Flow-Chart&quot;&gt;&lt;a href=&quot;#Packet-Flow-Chart&quot; class=&quot;headerlink&quot; title=&quot;Packet Flow Chart&quot;&gt;&lt;/a&gt;Packet Flow Chart&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;</summary>
      
    
    
    
    <category term="Networking" scheme="https://boypt.github.io/categories/Networking/"/>
    
    
    <category term="iptables" scheme="https://boypt.github.io/tags/iptables/"/>
    
    <category term="linux" scheme="https://boypt.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
